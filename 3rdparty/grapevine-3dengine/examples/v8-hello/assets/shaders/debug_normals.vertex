// PRECISION
precision highp int;
precision highp float;

// IN from buffer
attribute vec3 Position;
attribute vec3 Normal;
attribute vec2 TexCoord;

// IN from renderer
uniform mat4 ModelViewProjectionMatrix;
uniform mat4 NormalMatrix;

// OUT to fragment shader
varying vec3 nNormal;
varying vec2 TextureCoord;

void main(void)
{
    // Transform the normal's orientation into eye space.
    nNormal = normalize(vec3(NormalMatrix * vec4(Normal, 1.0)));
    //nNormal = Normal;

    // Pass the texture value
    TextureCoord = TexCoord;

    // Transform vertex position into eye space
    gl_Position = ModelViewProjectionMatrix * vec4(Position, 1.0);
}
