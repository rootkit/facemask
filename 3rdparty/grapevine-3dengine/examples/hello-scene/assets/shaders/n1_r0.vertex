// PRECISION
precision highp int;
precision highp float;

// IN from buffer
attribute vec3 Position;
attribute vec3 Normal;
attribute vec2 TexCoord;

// IN from renderer
uniform mat4 ModelViewProjectionMatrix;
uniform mat4 ModelMatrix;               // <- NEW
uniform highp vec3 OmniLightLocation;   // <- NEW
uniform highp float OmniLightStrength;  // <- NEW

// OUT to fragment shader
varying vec2 TextureCoord;
varying float OmniLightFactor;          // <- NEW

void main(void)
{
    // Pass the texture value
    TextureCoord = TexCoord;

    // Transform vertex position into eye space
    gl_Position = ModelViewProjectionMatrix * vec4(Position, 1.0);

    // Light
    vec4 tmp = vec4(OmniLightLocation, 1.0);                                    // <- NEW
    vec4 tmp2 = ModelMatrix * vec4(Position, 1.0);                              // <- NEW
    float tmp3 = (OmniLightStrength - length(tmp - tmp2)) / OmniLightStrength;  // <- NEW
    OmniLightFactor = clamp(tmp3, 0.0, 1.0);                                    // <- NEW
}
